spring:
  datasource:
    url: jdbc:h2:file:./data/flashdb;DB_CLOSE_DELAY=-1;MODE=MySQL;AUTO_SERVER=TRUE
    driver-class-name: org.h2.Driver
    username: sa
    password:
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: false
    properties:
      hibernate.format_sql: false
  h2:
    console:
      enabled: true


  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.add.type.headers: false
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "com.swe.flashsale.dto"
        spring.json.value.default.type: "com.swe.flashsale.dto.OrderMessage"

app:
  kafka:
    topic: flashsale-orders
    group-id: flashsale-group



# 톰캣/커넥션풀 기본치 살짝 상향(실험 편의)
server:
  tomcat:
    threads:
      max: 400

# Hikari (기본 10 → 30)
spring.datasource.hikari:
  maximum-pool-size: 30

# 결제 모의 지연(외부 PG 호출 대체). 필요시 조절
mock:
  payment:
    delay-ms: 200